#!/usr/bin/env python3
# -*-coding:UTF-8-*-

import requests
import re

# your username and password
username = 'wangl5899'
passwd = 'u201214008'

# don't change other contents.
url_reg = '^http://((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?):((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([1-9][0-9]{3})|([1-9][0-9]{2})|([1-9][0-9])|([0-9]))'
try_url = 'http://www.baidu.com'
default_server_addr = 'http://202.103.24.68:90'
default_ref_path = default_server_addr + '/p/30247dd99271a6806206be0598a1cf9e/index.html?d3d3LmJhaWR1LmNvbS8='
post_url_path = '/login'


def should_escape(c):

    return not (
        ('0' <= c and c <= '9') or
        ('A' <= c and c <= 'Z') or
        ('a' <= c and c <= 'z') or
        (c == '.' or c == '-' or c == '_')
    )


def escape_char(c):

    if(should_escape(c)):
        ret = '%' + hex(ord(c))[2:].upper()
    else:
        ret = c

    return ret


def shift_bit(n):

    return (
        ((n & 0x01) << 7) |
        ((n & 0x02) << 5) |
        ((n & 0x04) << 3) |
        ((n & 0x08) << 1) |
        ((n & 0x10) >> 1) |
        ((n & 0x20) >> 3) |
        ((n & 0x40) >> 5) |
        ((n & 0x80) >> 7)
    )


def encrypt(passwd):

    ret = ''
    for i in range(0, len(passwd)):
        c = chr(shift_bit(ord(passwd[i])) ^ (0x35 ^ (i & 0xff)))
        ret += escape_char(c)

    return ret


headers = {
    'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
    'Accept-Language': 'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Upgrade-Insecure-Requests': '1',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Connection': 'keep-alive',
}

data = {
    'uri': 'eHkyLjE2My5jb20v',
    'terminal': 'pc',
    'login_type': 'login',
    'check_passwd': '0',
    'show_tip': 'block',
    'show_change_password': 'none',
    'short_message': 'none',
    'show_captcha': 'none',
    'show_read': 'block',
    'show_assure': 'none',
    'username': username,
    'assure_phone': '',
    'password1': passwd,
    'password': encrypt(passwd),
    'new_password': '',
    'retype_newpassword': '',
    'captcha_value': '',
    'save_user': '1',
    'save_pass': '1',
    'read': '1'
}


def check_connection(session):

    r = session.get('http://www.baidu.com', allow_redirects=False)
    return [r.status_code, r.headers, r.content]


def get_auth_page(session):

    return session.get('http://www.baidu.com')


def get_server_host_addr(url):
    """
    split the url, get the socket(ip + port) address of server.
    """
    r = re.match(url_reg, url, 0)
    if r is not None:
        return url[r.start():r.end()]
    return None


def main():

    session = requests.Session()
    print('Check connection...')
    code, header, content = check_connection(session)
    if code == 200:
        print('Connection is OK.')
        return
    elif code == 302:
        resp = get_auth_page(session)
    else:
        print('Authentication server except. Response code is ' + code)
        return

    if resp.status_code != 200:
        ref_url = default_server_addr + default_ref_path
    else:
        ref_url = resp.url

    host_addr = get_server_host_addr(ref_url)
    if host_addr is None:
        print('Response url ' + ref_url + ' is error.')
        return

    header['Host'] = host_addr
    header['Referer'] = ref_url

    post_url = host_addr + post_url_path

    print('Authenticating...')
    response = session.post(post_url, headers=headers, data=data)
#    if check_connection(session)[0]:
     if 200 == check_connection(session)[0]:
        print('Connection is OK.')
    else:
        print('Authentication failed!')
        print('Response is:')
        print(response.content.decode())

    session.close()


if __name__ == '__main__':
    main()
